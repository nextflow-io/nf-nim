/*
 * Configuration file for Generative Virtual Screening Workflow
 */

// Default parameters
params {
    // Target protein (SARS-CoV-2 main protease by default)
    target_protein_sequence = "SGFRKMAFPSGKVEGCMVQVTCGTTTLNGLWLDDVVYCPRHVICTSEDMLNPNYEDLLIRKSNHNFLVQAGNVQLRVIGHSMQNCVLKLKVDTANPKTPKYKFVRIQPGQTFSVLACYNGSPSGVYQCAMRPNFTIKGSFLNGSCGSVGFNIDYDCVSFCYMHHMELPTGVHAGTDLEGNFYGPFVDRQTAQAAGTDTTITVNVLAWLYAAVINGDRWFLNRFTTTLNDFNLVAMKYNYEPLTQDHVDILGPLSAQTGIAVLDMCASLKELLQNGMNGRTILGSALLEDEFTPFDVVRQCSGVTFQ"
    
    // Seed molecule (Nirmatrelvir fragment)
    seed_molecule = "C12OC3C(O)C1O.C3O.[*{25-25}]"
    
    // Generation parameters
    num_molecules = 5
    num_poses = 10
    
    // MSA Search parameters
    e_value = 0.0001
    iterations = 1
    search_type = "alphafold2"
    databases = ["Uniref30_2302", "colabfold_envdb_202108", "PDB70_220313"]
    
    // GenMol parameters
    temperature = 1.0
    noise = 0.2
    step_size = 4
    scoring = "QED"
    
    // DiffDock parameters
    time_divisions = 20
    num_steps = 18
    
    // Output directory
    outdir = "results"
}

// Process configuration
process {
    // Global process settings
    errorStrategy = 'retry'
    maxRetries = 2
    
    // Memory and time settings for computationally intensive processes
    withName: msa_search {
        memory = '8 GB'
        time = '30m'
        cpus = 2
    }
    
    withName: protein_folding {
        memory = '16 GB'
        time = '1h'
        cpus = 4
    }
    
    withName: molecular_generation {
        memory = '8 GB'  
        time = '20m'
        cpus = 2
    }
    
    withName: protein_ligand_docking {
        memory = '16 GB'
        time = '45m'
        cpus = 4
    }
}

// Execution profiles
profiles {
    
    standard {
        process.executor = 'local'
        process.cpus = 2
        process.memory = '8 GB'
    }
    
    slurm {
        process.executor = 'slurm'
        process.queue = 'gpu'
        process.clusterOptions = '--gres=gpu:1'
    }
    
    aws {
        process.executor = 'awsbatch'
        process.queue = 'my-batch-queue'
        aws.batch.cliPath = '/home/ec2-user/miniconda/bin/aws'
        aws.region = 'us-east-1'
    }
}

// Reporting
report {
    enabled = true
    file = "${params.outdir}/report.html"
}

timeline {
    enabled = true
    file = "${params.outdir}/timeline.html"
}

trace {
    enabled = true
    file = "${params.outdir}/trace.txt"
}

dag {
    enabled = true
    file = "${params.outdir}/dag.svg"
}

// Manifest
manifest {
    name = 'generative-virtual-screening'
    description = 'Generative Virtual Screening Workflow using NVIDIA BioNeMo NIMs'
    version = '1.0.0'
    mainScript = 'generative-virtual-screening.nf'
    nextflowVersion = '>=21.10.0'
} 