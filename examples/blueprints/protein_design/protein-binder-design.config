/*
 * Configuration file for De Novo Protein Binder Design Workflow
 * Optimized for NVIDIA NIM services and computational biology workloads
 */

// Global parameters
params {
    // Output directory
    outdir = "results"
    
    // Example protein sequences - users can override these
    target_sequence = "NITEEFYQSTCSAVSKGYLSALRTGWYTSVITIELSNIKKIKCNGTDAKIKLIKQELDKYKNAVTELQLLMQSTPATNNQARGSGSGRSLGFLLGVGSAIASGVAVSKVLHLEGEVNKIKSALLSTNKAVVSLSNGVSVLTSKVLDLKNYIDKQLLPIVNKQSCSIPNIETVIEFQQKNNRLLEITREFSVNAGVTTPVSTYMLTNSELLSLINDMPITNDQKKLMSNNVQIVRQQSYSIMSIIKEEVLAYVVQLPLYGVIDTPCWKLHTSPLCTTNTKEGSNICLTRTDRGWYCDNAGSVSFFPQAETCKVQSNRVFCDTMNSLTLPSEVNLCNVDIFNPKYDCKIMTSKTDVSSSVITSLGAIVSCYGKTKCTASNKNRGIIKTFSNGCDYVSNKGVDTVSVGNTLYYVNKQEGKSLYVKGEPIINFYDPLVFPSDQFDASISQVNEKINQSLAFIRKSDELLSAIGGYIPEAPRDGQAYVRKDGEWVLLSTFLGGLVPRGSHHHHHH"
    
    // Alternative test sequences
    target_sequence_1r42 = "STIEEQAKTFLDKFNHEAEDLFYQSSLASWNYNTNITEENVQNMNNAGDKWSAFLKEQSTLAQMYPLQEIQNLTVKLQLQALQQNGSSVLSEDKSKRLNTILNTMSTIYSTGKVCNPDNPQECLLLEPGLNEIMANSLDYNERLWAWESWRSEVGKQLRPLYEEYVVLKNEMARANHYEDYGDYWRGDYEVNGVDGYDYSRGQLIEDVEHTFEEIKPLYEHLHAYVRAKLMNAYPSYISPIGCLPAHLLGDMWGRFWTNLYSLTVPFGQKPNIDVTDAMVDQAWDAQRIFKEAEKFFVSVGLPNMTQGFWENSMLTDPGNVQKAVCHPTAWDLGKGDFRILMCTKVTMDDFLTAHHEMGHIQYDMAYAAQPFLLRNGANEGFHEAVGEIMSLSAATPKHLKSIGLLSPDFQEDNETEINFLLKQALTIVGTLPFTYMLEKWRWMVFKGEIPKDQWMKKWWEMKREIVGVVEPVPHDETYCDPASLFHVSNDYSFIRYYTRTLYQFQFQEALCQAAKHEGPLHKCDISNSTEAGQKLFNMLRLGKSEPWTLALENVVGAKNMNVRPLLNYFEPLFTWLKDQNKNSFVGWSTDWSPYAD"
    
    // RFDiffusion parameters
    contigs = "A1-25/0 70-100"
    hotspot_res = ["A14", "A15", "A17", "A18"]
    diffusion_steps = 15
    
    // ProteinMPNN parameters
    ca_only = false
    use_soluble_model = false
    num_seq_per_target = 20
    sampling_temp = [0.1]
    
    // AlphaFold2 parameters
    algorithm = "mmseqs2"
    
    // Workflow control parameters
    pairs_to_process = 5
    max_parallel_jobs = 3
    
    // Help and version
    help = false
    version = false
}

// Workflow execution configuration
workDir = './work'

// Resource requirements for different processes
process {
    // Default resources
    cpus = 2
    memory = 4.GB
    time = 1.h
    
    // Process-specific resource allocation
    withName: 'alphafold2_structure' {
        cpus = 4
        memory = 16.GB
        time = 2.h
        maxRetries = 2
    }
    
    withName: 'rfdiffusion_binder_design' {
        cpus = 2
        memory = 8.GB
        time = 30.min
        maxRetries = 2
    }
    
    withName: 'proteinmpnn_sequence_design' {
        cpus = 2
        memory = 8.GB
        time = 30.min
        maxRetries = 2
    }
    
    withName: 'alphafold2_multimer_prediction' {
        cpus = 4
        memory = 16.GB
        time = 3.h
        maxRetries = 1
        maxForks = params.max_parallel_jobs
    }
    
    withName: 'create_binder_target_pairs' {
        cpus = 1
        memory = 2.GB
        time = 10.min
    }
    
    withName: 'assess_binding_quality' {
        cpus = 1
        memory = 4.GB
        time = 15.min
    }
}

// Execution profiles
profiles {
    standard {
        process.executor = 'local'
        process.container = 'ubuntu:20.04'
    }
    
    docker {
        docker.enabled = true
        docker.runOptions = '-u $(id -u):$(id -g)'
        process.container = 'nvcr.io/nvidia/pytorch:23.10-py3'
    }
    
    singularity {
        singularity.enabled = true
        singularity.autoMounts = true
        process.container = 'docker://nvcr.io/nvidia/pytorch:23.10-py3'
    }
    
    slurm {
        process.executor = 'slurm'
        process.queue = 'gpu'
        process.clusterOptions = '--gres=gpu:1'
    }
    
    pbs {
        process.executor = 'pbs'
        process.queue = 'workq'
    }
}

// Timeline and reporting
timeline {
    enabled = true
    file = "${params.outdir}/timeline.html"
}

report {
    enabled = true
    file = "${params.outdir}/report.html"
}

trace {
    enabled = true
    file = "${params.outdir}/trace.txt"
}

dag {
    enabled = true
    file = "${params.outdir}/dag.svg"
}

// Cleanup on success
cleanup = false

// Manifest
manifest {
    name = 'protein-binder-design'
    author = 'NVIDIA NIM Protein Design Workflow'
    homePage = 'https://github.com/nvidia/nim-protein-design'
    description = 'De novo protein binder design using NVIDIA NIMs'
    mainScript = 'protein-binder-design.nf'
    nextflowVersion = '>=21.04.0'
    version = '1.0.0'
} 